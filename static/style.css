:root {
  --hue: 220deg;
  --text: oklch(70% 0.1 var(--hue));
  --text-3: oklch(10% 0.1 var(--hue));
  --text-4: oklch(70% 0.1 var(--hue));
  --surface-1: oklch(5% 0.1 var(--hue));
  --surface-2: oklch(20% 0.1 var(--hue));
  --surface-3: oklch(80% 0.1 var(--hue));
  --surface-4: oklch(30% 0.1 var(--hue));
  --font-family: "Tektur", cursive;
  --font-letterspacing-2: 0.05em;
  --font-lineheight-1: 1.1;

  --text-active: var(--text-4);
  --surface-active: var(--surface-4);

  /* Weight */
  --font-weight-1: 100;
  --font-weight-2: 200;
  --font-weight-3: 300;
  --font-weight-4: 400;
  --font-weight-5: 500;
  --font-weight-6: 600;
  --font-weight-7: 700;

  /* Sizes */
  --size-1: 0.25rem;
  --size-2: 0.5rem;
  --size-3: 1rem;
  --size-4: 2rem;
  --size-5: 3rem;

  /* Font spacing */
  --font-spacing-1: 0.025rem;
  --font-spacing-2: 0.05rem;
  --font-spacing-3: 0.075rem;

  /* Path */
  --bevel-size: 0.75ch;
  --bevel: polygon(
    var(--bevel-size) 0%,
    calc(100% - var(--bevel-size)) 0%,
    100% var(--bevel-size),
    100% calc(100% - var(--bevel-size)),
    calc(100% - var(--bevel-size)) 100%,
    var(--bevel-size) 100%,
    0% calc(100% - var(--bevel-size)),
    0% var(--bevel-size)
  );
}

h1 {
  font-size: var(--size-5);
  letter-spacing: var(--font-letterspacing-2);
  line-height: var(--font-lineheight-1);
}

nav {
  background-color: var(--surface-2);
  padding-inline: var(--size-2);
}

body {
  margin: 0;
  min-height: 100svh;
  color: var(--text);
  background-color: var(--surface-1);
  font-family: var(--font-family);
}

main {
  max-width: 30ch;
  margin-block: 0;
  margin-inline: auto;
}

.submission {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

input[type="text"] {
  width: 100%;
  box-sizing: border-box;
  padding-block: var(--size-2);
  padding-inline-start: var(--size-2);
  border-radius: var(--size-1);
}

.widget {
  display: flex;
  flex-direction: column;
  gap: var(--size-1);
}

button {
  font-family: var(--text);
  font-weight: var(--font-weight-7);
  padding-block: var(--size-2);
  text-transform: uppercase;
  letter-spacing: var(--font-spacing-3);
  color: var(--text-3);
  background-color: var(--surface-3);
  border-color: transparent;
  /**
  border-style: solid;
  border-color: var(--text);
  border-radius: var(--size-1);
  */
}

button,
input[type="text"],
.stack {
  clip-path: var(--bevel);
}

.row {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: var(--size-2);
}

input[type="text"],
input[type="number"] {
  color: inherit;
  background-color: var(--surface-2);
  border-color: transparent;
}

select {
  background-color: var(--surface-2);
  color: inherit;
  padding-block: var(--size-2);
  padding-inline: var(--size-1);
}

/* Grid stack trick */
.stack {
  display: grid;
  grid-template-areas:
    "tab-1 tab-2 tab-3"
    "body body body";
  color: var(--text);
}

.stack {
  background-image: linear-gradient(
    var(--surface-2),
    var(--surface-1));
}

.tab-1 {
  grid-area: tab-1;
}
.tab-2 {
  grid-area: tab-2;
}
.tab-3 {
  grid-area: tab-3;
}

.radio {
  grid-area: tab;
}

.item {
  grid-area: body;
  padding-block: var(--size-2);
  padding-inline: var(--size-4);
}

.tab label {
  cursor: pointer;
  padding-block: var(--size-2);
  padding-inline: var(--size-4);
}

.tab {
  display: grid;
  grid-template-areas: "stack";
}

.tab input,
.tab label {
  grid-area: stack;
}

.tab input {
  opacity: 0;
}

input[type="radio"]:checked + label {
  color: var(--text-active);
  background-color: var(--surface-active);
}

label {
  cursor: pointer;
}

.item:has(~ .tab input:checked) {
  z-index: 1;
  color: var(--text-active);
  background-image: linear-gradient(
    var(--surface-active),
    var(--surface-1));
}

canvas {
  width: 100%;
  aspect-ratio: 4/3;
}
